{'aliases': {},
 'creation_timestamp': 1691177175821,
 'description': '# Iris Setosa and Versicolor Classification Model\n'
                '\n'
                '## Overview\n'
                '\n'
                'This document provides documentation for the "Iris Setosa and '
                'Versicolor Classification" model. The model is built to '
                'classify Iris flowers into two classes, Setosa and '
                'Versicolor, using the Support Vector Machine (SVM) algorithm. '
                'It is trained on the Iris dataset, containing petal length '
                'and petal width features.\n'
                '\n'
                '## Dataset\n'
                '\n'
                'The model is trained on the famous Iris dataset from '
                'scikit-learn. The dataset contains samples of three different '
                'Iris flower species: Setosa, Versicolor, and Virginica. For '
                'this model, we focus on classifying Iris flowers into Setosa '
                'and Versicolor classes. The dataset consists of petal length '
                'and petal width features for each sample.\n'
                '\n'
                '## Model Details\n'
                '\n'
                'The "Iris Setosa and Versicolor Classification" model is '
                'developed using the `SVC` (Support Vector Classification) '
                'algorithm from scikit-learn with a linear kernel. The SVM is '
                'a powerful classification technique that seeks to find the '
                'best decision boundary that separates the classes.\n'
                '\n'
                '## Model Training\n'
                '\n'
                'The SVM classifier is trained using the petal length and '
                'petal width features of the Iris flowers. We perform a binary '
                'classification by considering only two classes, Setosa and '
                'Versicolor (ignoring Virginica). The `C` hyperparameter is '
                'set to 10000.0 to enforce hard-margin classification, '
                'allowing minimal margin violations in the training data.\n'
                '\n'
                '## Model Evaluation\n'
                '\n'
                "To evaluate the model's performance, we use standard metrics "
                'like accuracy, precision, recall, and F1-score. Since the '
                'dataset contains only two classes, confusion matrix metrics '
                'are applicable.\n'
                '\n'
                '## Model Autologging\n'
                '\n'
                "MLflow's autologging feature is enabled for this model using "
                '`mlflow.sklearn.autolog()`. This ensures that all relevant '
                'model parameters, metrics, and artifacts are automatically '
                'logged and tracked in the designated MLflow tracking server.\n'
                '\n'
                '## Conclusion\n'
                '\n'
                'The "Iris Setosa and Versicolor Classification" model '
                'demonstrates its ability to accurately classify Iris flowers '
                'into Setosa and Versicolor classes based on petal length and '
                'petal width features. By leveraging the power of Support '
                'Vector Machines, the model achieves a robust decision '
                'boundary to differentiate between the two classes. The model '
                'can be used for further insights or integrated into larger '
                'applications for Iris flower classification tasks.\n',
 'last_updated_timestamp': 1691178541150,
 'latest_versions': [<ModelVersion: aliases=[], creation_timestamp=1691178487601, current_stage='Production', description='', last_updated_timestamp=1691178541150, name='Iris', run_id='b584892fc8434e7aba47fca73c532c59', run_link='', source='dbfs:/databricks/mlflow-tracking/3394646739025421/b584892fc8434e7aba47fca73c532c59/artifacts/model', status='READY', status_message='', tags={}, user_id='gteicom@hotmail.com', version='3'>,
                     <ModelVersion: aliases=[], creation_timestamp=1691178444085, current_stage='Staging', description='', last_updated_timestamp=1691178540771, name='Iris', run_id='77212b24b39549348c663d780c469cc2', run_link='', source='dbfs:/databricks/mlflow-tracking/3394646739025421/77212b24b39549348c663d780c469cc2/artifacts/model', status='READY', status_message='', tags={}, user_id='gteicom@hotmail.com', version='2'>
    ],
 'name': 'Iris',
 'tags': {'C': '10000.0',
          'algorithm': 'SupportVectorMachine',
          'author': 'Jane Smith',
          'created_at': '2023-09-15',
          'framework': 'scikit-learn',
          'kernel': 'linear',
          'problem_type': 'BinaryClassification'
    }
}